{"name": "test_gongzuoliu[202310231154715-0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0093DCE3+50899]\n\t(No symbol) [0x008CE111]\n\t(No symbol) [0x007D5588]\n\t(No symbol) [0x008008F9]\n\t(No symbol) [0x00800AFB]\n\t(No symbol) [0x0082F902]\n\t(No symbol) [0x0081B944]\n\t(No symbol) [0x0082E01C]\n\t(No symbol) [0x0081B6F6]\n\t(No symbol) [0x007F7708]\n\t(No symbol) [0x007F886D]\n\tGetHandleVerifier [0x00BA3EAE+2566302]\n\tGetHandleVerifier [0x00BD92B1+2784417]\n\tGetHandleVerifier [0x00BD327C+2759788]\n\tGetHandleVerifier [0x009D5740+672048]\n\t(No symbol) [0x008D8872]\n\t(No symbol) [0x008D41C8]\n\t(No symbol) [0x008D42AB]\n\t(No symbol) [0x008C71B7]\n\tBaseThreadInitThunk [0x750F7BA9+25]\n\tRtlInitializeExceptionChain [0x7714BD3B+107]\n\tRtlClearBits [0x7714BCBF+191]", "trace": "tiaoma = '202310231154715', ed_a = '0'\n\n    @pytest.mark.parametrize('tiaoma,ed_a', category_data)\n    def test_gongzuoliu(tiaoma,ed_a):\n            driver=login()\n            home=home_bnt(driver)\n            home.shenqing_zhanghuguanli.click()\n            home.shenqingchaxun.click()\n            sleep(2)\n            wenben=chaxun(tiaoma,driver)\n            jietu('查询成功页',driver)\n    \n            # print(wenben)\n            # 打开工作流\n            home.gongzuoliu.click()\n            # 判断进入队列\n            while wenben!='账户建立' :\n                if wenben=='外部接口后Instinct':\n                    home.waibujiekou_in.click()\n                    wait_yuansu=fanhui_yuanshu()\n                    wait_dianji(driver,wait_yuansu)\n                    jietu('外部接口后Instinct',driver)\n                    sleep(0.5)\n                    waibujiekou_ins(tiaoma,driver)\n                    driver.execute_script(('window.scrollBy(0,10000)'))\n                    wait_dianji(driver,home.shenqingchaxun_yuanshu)\n                    # sleep(1)\n                    home.shenqingchaxun.click()\n                    sleep(3)\n                    wenben=chaxun(tiaoma,driver)\n                    try:\n                        assert wenben!='外部接口后Instinct'\n                    except:\n                        pass\n    \n                elif wenben=='外部接口':\n                    home.waibujiekou.click()\n                    wait_yuansu=fanhui_yuanshu()\n                    wait_dianji(driver,wait_yuansu)\n                    jietu('外部接口',driver)\n                    sleep(0.5)\n                    wbjk(tiaoma,driver)\n                    home.shenqingchaxun.click()\n                    driver.execute_script(('window.scrollBy(0,10000)'))\n                    sleep(2)\n                    wenben=chaxun(tiaoma,driver)\n                    try:\n                        assert wenben!='外部接口'\n                    except:\n                        pass\n                elif wenben=='分中心预审':\n                    home.fenzhongxinyushen.click()\n                    wait_yuansu=fanhui_yuanshu()\n                    wait_dianji(driver,wait_yuansu)\n                    jietu('分中心预审页面',driver)\n                    sleep(0.5)\n                    fzxys(tiaoma,driver)\n                    sleep(1)\n                    home.shenqingchaxun.click()\n                    wenben=chaxun(tiaoma,driver)\n                    try:\n                        assert wenben!='分中心预审'\n                    except:\n                        pass\n    \n                elif wenben=='信审':\n                    home.xinshen.click()\n                    wait_yuansu=fanhui_yuanshu()\n                    wait_dianji(driver,wait_yuansu)\n                    # sleep(5)\n                    jietu('信审页面',driver)\n                    sleep(0.5)\n                    xinshens(tiaoma,driver)\n                    sleep(2)\n                    driver.execute_script(('window.scrollBy(0,10000)'))\n                    home.shenqingchaxun.click()\n                    try:\n                        sleep(1)\n                        home.driver.find_element(*home.queding).click()\n                    except:\n                         pass\n                    sleep(3)\n>                   wenben=chaxun(tiaoma,driver)\n\ntestcase\\test_gongzuoliu.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbusiness\\file_processing.py:51: in chaxun\n    wait_dianji(driver,sqcx.shenqingtiaoma_yuanshu)\nutil\\fangfa.py:86: in wait_dianji\n    WebDriverWait(driver,cs,jg).until(EC.element_to_be_clickable(yuansu))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"edfac635b4fbc07fdbd0b18d8737c22d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001AA9BBCE4C0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0093DCE3+50899]\nE       \t(No symbol) [0x008CE111]\nE       \t(No symbol) [0x007D5588]\nE       \t(No symbol) [0x008008F9]\nE       \t(No symbol) [0x00800AFB]\nE       \t(No symbol) [0x0082F902]\nE       \t(No symbol) [0x0081B944]\nE       \t(No symbol) [0x0082E01C]\nE       \t(No symbol) [0x0081B6F6]\nE       \t(No symbol) [0x007F7708]\nE       \t(No symbol) [0x007F886D]\nE       \tGetHandleVerifier [0x00BA3EAE+2566302]\nE       \tGetHandleVerifier [0x00BD92B1+2784417]\nE       \tGetHandleVerifier [0x00BD327C+2759788]\nE       \tGetHandleVerifier [0x009D5740+672048]\nE       \t(No symbol) [0x008D8872]\nE       \t(No symbol) [0x008D41C8]\nE       \t(No symbol) [0x008D42AB]\nE       \t(No symbol) [0x008C71B7]\nE       \tBaseThreadInitThunk [0x750F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x7714BD3B+107]\nE       \tRtlClearBits [0x7714BCBF+191]\n\nC:\\Users\\wang_\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "9ff7cd45-a422-4f07-93a3-ad2cfce4c58d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "tiaoma", "value": "'202310231154715'"}, {"name": "ed_a", "value": "'0'"}], "start": 1698056361986, "stop": 1698056563066, "uuid": "66482d9c-50b5-4935-af8a-c485ddd9d444", "historyId": "de056db08289646122c10f5a8a30f2c9", "testCaseId": "c0076cde91c9a67cf92a259f0b3b2e97", "fullName": "testcase.test_gongzuoliu#test_gongzuoliu", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_gongzuoliu"}, {"name": "host", "value": "wangyun"}, {"name": "thread", "value": "3264-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_gongzuoliu"}]}